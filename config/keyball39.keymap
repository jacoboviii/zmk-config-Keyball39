#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/input_transform.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <33 34 35 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 37 38 36>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 21 22 23 24 20 33 34 35 36 37 38>;
        };
    };

    trackball_listener {
        slow_pointer {
            layers = <6>;
            input-processors = <&zip_xy_scaler 1 2>;
        };

        scroll {
            layers = <7>;
            input-processors = <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT &zip_xy_scaler 1 8 &zip_xy_to_scroll_mapper  &zip_scroll_scaler 1 8>;
        };
   };

    keymap {
        compatible = "zmk,keymap";

        default {
            label = "Base";
            bindings = <
&kp Q             &kp W            &kp E         &kp R              &kp T                                    &kp Y      &kp U               &kp I         &kp O             &kp P
&hml LEFT_META A  &hml LEFT_ALT S  &hml LCTRL D  &hml LEFT_SHIFT F  &kp G                                    &kp H      &hmr RIGHT_SHIFT J  &hmr RCTRL K  &hmr RIGHT_ALT L  &hmr RIGHT_META SEMI
&kp Z             &kp X            &kp C         &lt 7 V            &kp B                                    &kp N      &lt 6 M             &kp COMMA     &kp DOT           &kp SLASH
&none             &none            &none         &lt 3 ESCAPE       &lt 4 BACKSPACE  &lt 5 ENTER  &lt 2 TAB  &lt 1 SPACE                                                    &kp DELETE
            >;
        };

        nav {
            label = "Nav";
            bindings = <
&kp PG_UP      &kp HOME   &kp UP     &kp END     &kp INS                           &none   &none      &none      &none     &none
&kp PG_DN      &kp LEFT   &kp DOWN   &kp RIGHT   &caps_word                        &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp LG(Z)      &kp LG(X)  &kp LG(C)  &kp LG(V)   &kp LS(LG(Z))                     &none   &none      &none      &none     &none
&none          &none      &none      &kp ESCAPE  &kp BACKSPACE  &kp ENTER  &trans  &trans                                  &trans
            >;
        };

        media {
            label = "Media";
            bindings = <
&trans        &trans        &kp C_VOLUME_UP    &trans        &trans                        &none   &none      &none      &none     &none
&bt BT_CLR    &kp C_PREV    &kp C_VOLUME_DOWN  &kp C_NEXT    &trans                        &none   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                  &none   &none      &none      &none     &none
&none         &none         &none              &kp C_MUTE    &kp C_PP  &kp C_STOP  &trans  &trans                                  &trans
            >;
        };

        fun {
            label = "Fun";
            bindings = <
&none     &none     &none      &none      &none                    &kp PSCRN         &kp F7  &kp F8  &kp F9  &kp F12
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                    &kp SLCK          &kp F4  &kp F5  &kp F6  &kp F11
&none     &none     &none      &none      &none                    &kp PAUSE_BREAK   &kp F1  &kp F2  &kp F3  &kp F10
&none     &none     &none      &trans     &trans  &trans  &kp TAB  &kp SPACE                                 &kp K_APP
            >;
        };

        num {
            label = "Num";
            bindings = <
&none     &none     &none      &none      &none                      &kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                      &kp EQUAL  &kp N4  &kp N5  &kp N6  &kp SQT
&none     &none     &none      &none      &none                      &kp BSLH   &kp N1  &kp N2  &kp N3  &kp GRAVE
&none     &none     &none      &trans     &trans  &trans  &kp MINUS  &kp N0                             &kp DOT
            >;
        };

        sym {
            label = "Sym";
            bindings = <
&none     &none     &none      &none      &none                      &kp LEFT_BRACE  &kp AMPS    &kp ASTRK    &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                      &kp PLUS        &kp DOLLAR  &kp PERCENT  &kp CARET             &kp DQT
&none     &none     &none      &none      &none                      &kp PIPE        &kp EXCL    &kp AT       &kp POUND             &kp TILDE
&none     &none     &none      &trans     &trans  &trans  &kp UNDER  &kp RIGHT_PARENTHESIS                                          &kp LEFT_PARENTHESIS
            >;
        };

        mouse {
            label = "Mouse";
            bindings = <
&trans     &trans     &trans     &trans     &trans                        &trans  &trans  &trans  &trans  &trans
&trans     &trans     &trans     &trans     &trans                        &trans  &trans  &trans  &trans  &trans
&kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LS(LG(Z))                 &trans  &trans  &trans  &trans  &trans
&trans     &trans     &trans     &mkp MCLK  &mkp LCLK  &mkp RCLK  &trans  &trans                          &trans
            >;
        };

        scroll {
            label = "Scroll";
            bindings = <
&trans     &trans     &trans     &trans     &trans                        &trans  &trans  &trans  &trans  &trans
&trans     &trans     &trans     &trans     &trans                        &trans  &trans  &trans  &trans  &trans
&trans     &trans     &trans     &trans     &trans                        &trans  &trans  &trans  &trans  &trans
&trans     &trans     &trans     &mkp MCLK  &mkp LCLK  &mkp RCLK  &trans  &trans                          &trans
            >;
        };
    };
};
